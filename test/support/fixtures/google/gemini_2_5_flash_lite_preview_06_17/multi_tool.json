{
  "request": {
    "body": {
      "b64": "eyJjb250ZW50cyI6W3sicGFydHMiOlt7InRleHQiOiJXaGF0J3MgdGhlIHdlYXRoZXIgbGlrZSBpbiBQYXJpcywgRnJhbmNlPyJ9XSwicm9sZSI6InVzZXIifV0sImdlbmVyYXRpb25Db25maWciOnsiY2FuZGlkYXRlQ291bnQiOjEsIm1heE91dHB1dFRva2VucyI6MzAwLCJ0ZW1wZXJhdHVyZSI6MC4wLCJ0aGlua2luZ0NvbmZpZyI6eyJpbmNsdWRlVGhvdWdodHMiOnRydWUsInRoaW5raW5nQnVkZ2V0Ijo0MDk2fX0sInRvb2xzIjpbeyJmdW5jdGlvbkRlY2xhcmF0aW9ucyI6W3siZGVzY3JpcHRpb24iOiJHZXQgY3VycmVudCB3ZWF0aGVyIGluZm9ybWF0aW9uIGZvciBhIGxvY2F0aW9uIiwibmFtZSI6ImdldF93ZWF0aGVyIiwicGFyYW1ldGVycyI6eyJwcm9wZXJ0aWVzIjp7ImxvY2F0aW9uIjp7InR5cGUiOiJzdHJpbmcifSwidW5pdCI6eyJlbnVtIjpbImNlbHNpdXMiLCJmYWhyZW5oZWl0Il0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxvY2F0aW9uIl0sInR5cGUiOiJvYmplY3QifX0seyJkZXNjcmlwdGlvbiI6IlRlbGwgYSBmdW5ueSBqb2tlIiwibmFtZSI6InRlbGxfam9rZSIsInBhcmFtZXRlcnMiOnsicHJvcGVydGllcyI6eyJ0b3BpYyI6eyJkZXNjcmlwdGlvbiI6IlRvcGljIGZvciB0aGUgam9rZSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0seyJkZXNjcmlwdGlvbiI6IkdldCB0aGUgY3VycmVudCB0aW1lIiwibmFtZSI6ImdldF90aW1lIiwicGFyYW1ldGVycyI6eyJwcm9wZXJ0aWVzIjp7fSwidHlwZSI6Im9iamVjdCJ9fV19XX0="
    },
    "canonical_json": {
      "contents": [
        {
          "parts": [
            {
              "text": "What's the weather like in Paris, France?"
            }
          ],
          "role": "user"
        }
      ],
      "generationConfig": {
        "candidateCount": 1,
        "maxOutputTokens": 300,
        "temperature": 0.0,
        "thinkingConfig": {
          "includeThoughts": true,
          "thinkingBudget": 4096
        }
      },
      "tools": [
        {
          "functionDeclarations": [
            {
              "description": "Get current weather information for a location",
              "name": "get_weather",
              "parameters": {
                "properties": {
                  "location": {
                    "type": "string"
                  },
                  "unit": {
                    "enum": [
                      "celsius",
                      "fahrenheit"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "location"
                ],
                "type": "object"
              }
            },
            {
              "description": "Tell a funny joke",
              "name": "tell_joke",
              "parameters": {
                "properties": {
                  "topic": {
                    "description": "Topic for the joke",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            {
              "description": "Get the current time",
              "name": "get_time",
              "parameters": {
                "properties": {},
                "type": "object"
              }
            }
          ]
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite-preview-06-17:generateContent?key=%5BREDACTED%3Akey%5D"
  },
  "response": {
    "body": {
      "candidates": [
        {
          "content": {
            "parts": [
              {
                "text": "**Paris Weather Inquiry: My Action Plan**\n\nOkay, so I've got a user request for the weather in Paris. Simple enough.  My expert brain immediately goes to the `get_weather` tool as the perfect fit here.  The crucial piece is the location, which is explicitly \"Paris, France\" - crystal clear.  There's no mention of units (Celsius, Fahrenheit), so I'll leave that parameter out. That keeps things clean and avoids any potential confusion or assumptions on my part.  Therefore, I'll execute `default_api.get_weather(location='Paris, France')` and I'm good to go. This is a quick and effective solution, and I'm ready to move on.\n",
                "thought": true
              },
              {
                "functionCall": {
                  "args": {
                    "location": "Paris, France"
                  },
                  "name": "get_weather"
                },
                "thoughtSignature": "CvMCAdHtim/LCl7EG78NxhM/cfDzrjv+6JJOOd8xtI1W6fiXuLlitCWBPZg13kDWS3zqbIIrEDSGtcaXwq2mFP+fgd2wkEO/N+gvjHHYGaUlegYQltDsROq2tnSvvmYz2Lrmy54K+pDfx6BbuF93p/1RFgLw8grvema+1fZYpkevIvkGBNMCZB7F7l3jCnjo64SBpacKcdX/r8PvlFdU/EBfk9yy5YxDurLYd8AfX75WuUPBoCx5hpftIMjMLDbNuOhXObu5MzG4dKM//7wdXnYTQF+/SDHX/YEId6c0+lIq4S3hGI1jF90T+Neu+guoi5ppYyFCZRptv1kmxrohs7hmY/qw8Kyp/EZOlyA96X4Jbh6/3jnottzlEOG8D+YdP3e/RtrAN8w5EAEfCUI1gb9kmXyPhGiqJN0U8YQpJos0RUrTioUCVtYmI7pCB/su76HT96BuwsBOXUEsHfbSCdGTQpXFVFSjB/Xj7k0LO+ValCr2gps="
              }
            ],
            "role": "model"
          },
          "finishReason": "STOP",
          "index": 0
        }
      ],
      "modelVersion": "gemini-2.5-flash-lite-preview-06-17",
      "responseId": "i1vgaP-VC_ep_uMP1rC2iA8",
      "usageMetadata": {
        "candidatesTokenCount": 17,
        "promptTokenCount": 142,
        "promptTokensDetails": [
          {
            "modality": "TEXT",
            "tokenCount": 142
          }
        ],
        "thoughtsTokenCount": 85,
        "totalTokenCount": 244
      }
    },
    "headers": {
      "alt-svc": [
        "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
      ],
      "content-type": [
        "application/json; charset=UTF-8"
      ],
      "date": [
        "Fri, 03 Oct 2025 23:26:03 GMT"
      ],
      "server": [
        "scaffolding on HTTPServer2"
      ],
      "server-timing": [
        "gfet4t7; dur=1639"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Origin",
        "X-Origin",
        "Referer"
      ],
      "x-content-type-options": [
        "nosniff"
      ],
      "x-frame-options": [
        "SAMEORIGIN"
      ],
      "x-xss-protection": [
        "0"
      ]
    },
    "status": 200
  }
}