{
  "request": {
    "body": {
      "b64": "eyJjb250ZW50cyI6W3sicGFydHMiOlt7InRleHQiOiJUZWxsIG1lIGEgam9rZSBhYm91dCBjYXRzIn1dLCJyb2xlIjoidXNlciJ9XSwiZ2VuZXJhdGlvbkNvbmZpZyI6eyJjYW5kaWRhdGVDb3VudCI6MSwibWF4T3V0cHV0VG9rZW5zIjozMDAsInRlbXBlcmF0dXJlIjowLjAsInRoaW5raW5nQ29uZmlnIjp7ImluY2x1ZGVUaG91Z2h0cyI6dHJ1ZSwidGhpbmtpbmdCdWRnZXQiOjQwOTZ9fSwidG9vbHMiOlt7ImZ1bmN0aW9uRGVjbGFyYXRpb25zIjpbeyJkZXNjcmlwdGlvbiI6IkdldCBjdXJyZW50IHdlYXRoZXIgaW5mb3JtYXRpb24gZm9yIGEgbG9jYXRpb24iLCJuYW1lIjoiZ2V0X3dlYXRoZXIiLCJwYXJhbWV0ZXJzIjp7InByb3BlcnRpZXMiOnsibG9jYXRpb24iOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibG9jYXRpb24iXSwidHlwZSI6Im9iamVjdCJ9fV19XX0="
    },
    "canonical_json": {
      "contents": [
        {
          "parts": [
            {
              "text": "Tell me a joke about cats"
            }
          ],
          "role": "user"
        }
      ],
      "generationConfig": {
        "candidateCount": 1,
        "maxOutputTokens": 300,
        "temperature": 0.0,
        "thinkingConfig": {
          "includeThoughts": true,
          "thinkingBudget": 4096
        }
      },
      "tools": [
        {
          "functionDeclarations": [
            {
              "description": "Get current weather information for a location",
              "name": "get_weather",
              "parameters": {
                "properties": {
                  "location": {
                    "type": "string"
                  }
                },
                "required": [
                  "location"
                ],
                "type": "object"
              }
            }
          ]
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-09-2025:generateContent?key=%5BREDACTED%3Akey%5D"
  },
  "response": {
    "body": {
      "candidates": [
        {
          "content": {
            "parts": [
              {
                "text": "**Here's how I approached this, step-by-step:**\n\nOkay, the user wants a cat joke. Simple enough, but my toolset is limited.  All I have is this `weather_api`, which is clearly useless here.  Generating a joke requires creativity, not data retrieval.  So, I'm on my own.\n\nI started brainstorming. Puns are a reliable starting point, so I came up with \"What do you call a cat that can swim? A catfish.\" But, yeah, it's pretty basic.  Then, I went for a classic: \"Why are cats bad at telling secrets? Because they let the cat out of the bag!\" It's a solid option, but I wanted something a little fresher.  A knock-knock joke seemed viable, so I tried, \"Knock, knock. Who's there? Cat. Cat who? Cat-astrophe!\"  Meh, a bit overdone.\n\nFinally, I thought about cat behavior, specifically their… *ahem*… affinity for lounging and watching things.  That led me to \"Why did the cat sit on the computer? To keep an eye on the mouse!\"  I like that one because it plays on both cat and computer terminology, which gives it a bit of an edge. I think it's the best of the bunch. Time to format that and present it.\n",
                "thought": true
              }
            ],
            "role": "model"
          },
          "finishReason": "MAX_TOKENS",
          "index": 0
        }
      ],
      "modelVersion": "gemini-2.5-flash-preview-09-2025",
      "responseId": "k1vgaKrsC_SS_uMPiI2foQ8",
      "usageMetadata": {
        "promptTokenCount": 46,
        "promptTokensDetails": [
          {
            "modality": "TEXT",
            "tokenCount": 46
          }
        ],
        "thoughtsTokenCount": 299,
        "totalTokenCount": 345
      }
    },
    "headers": {
      "alt-svc": [
        "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
      ],
      "content-type": [
        "application/json; charset=UTF-8"
      ],
      "date": [
        "Fri, 03 Oct 2025 23:26:11 GMT"
      ],
      "server": [
        "scaffolding on HTTPServer2"
      ],
      "server-timing": [
        "gfet4t7; dur=3628"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Origin",
        "X-Origin",
        "Referer"
      ],
      "x-content-type-options": [
        "nosniff"
      ],
      "x-frame-options": [
        "SAMEORIGIN"
      ],
      "x-xss-protection": [
        "0"
      ]
    },
    "status": 200
  }
}