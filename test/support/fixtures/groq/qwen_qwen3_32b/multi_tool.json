{
  "request": {
    "body": {
      "b64": "eyJtYXhfdG9rZW5zIjozMjc2LCJtZXNzYWdlcyI6W3siY29udGVudCI6IldoYXQncyB0aGUgd2VhdGhlciBsaWtlIGluIFBhcmlzLCBGcmFuY2U/Iiwicm9sZSI6InVzZXIifV0sIm1vZGVsIjoicXdlbi9xd2VuMy0zMmIiLCJzZWVkIjo0Miwic3RyZWFtIjpmYWxzZSwidGVtcGVyYXR1cmUiOjAuMCwidG9vbHMiOlt7ImZ1bmN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiR2V0IGN1cnJlbnQgd2VhdGhlciBpbmZvcm1hdGlvbiBmb3IgYSBsb2NhdGlvbiIsIm5hbWUiOiJnZXRfd2VhdGhlciIsInBhcmFtZXRlcnMiOnsicHJvcGVydGllcyI6eyJsb2NhdGlvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInVuaXQiOnsiZW51bSI6WyJjZWxzaXVzIiwiZmFocmVuaGVpdCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsb2NhdGlvbiJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifSx7ImZ1bmN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGVsbCBhIGZ1bm55IGpva2UiLCJuYW1lIjoidGVsbF9qb2tlIiwicGFyYW1ldGVycyI6eyJwcm9wZXJ0aWVzIjp7InRvcGljIjp7ImRlc2NyaXB0aW9uIjoiVG9waWMgZm9yIHRoZSBqb2tlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6ImZ1bmN0aW9uIn0seyJmdW5jdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkdldCB0aGUgY3VycmVudCB0aW1lIiwibmFtZSI6ImdldF90aW1lIiwicGFyYW1ldGVycyI6eyJwcm9wZXJ0aWVzIjp7fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6ImZ1bmN0aW9uIn1dfQ=="
    },
    "canonical_json": {
      "max_tokens": 3276,
      "messages": [
        {
          "content": "What's the weather like in Paris, France?",
          "role": "user"
        }
      ],
      "model": "qwen/qwen3-32b",
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tools": [
        {
          "function": {
            "description": "Get current weather information for a location",
            "name": "get_weather",
            "parameters": {
              "properties": {
                "location": {
                  "type": "string"
                },
                "unit": {
                  "enum": [
                    "celsius",
                    "fahrenheit"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "location"
              ],
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Tell a funny joke",
            "name": "tell_joke",
            "parameters": {
              "properties": {
                "topic": {
                  "description": "Topic for the joke",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Get the current time",
            "name": "get_time",
            "parameters": {
              "properties": {},
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://api.groq.com/openai/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "logprobs": null,
          "message": {
            "reasoning": "Okay, the user is asking about the weather in Paris, France. Let me check which tool I can use here. The available functions are get_weather, tell_joke, and get_time. The get_weather function seems appropriate here. The parameters required are location and unit. The user didn't specify the unit, so I should probably default to celsius since France uses it. Let me make sure to include the location as \"Paris, France\" and set the unit to celsius. I'll call the get_weather function with these parameters.\n",
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\"location\":\"Paris, France\",\"unit\":\"celsius\"}",
                  "name": "get_weather"
                },
                "id": "9a07c4ap0",
                "type": "function"
              }
            ]
          }
        }
      ],
      "created": 1759844711,
      "id": "chatcmpl-71aabd96-3036-41bd-a812-e6cd33546d84",
      "model": "qwen/qwen3-32b",
      "object": "chat.completion",
      "service_tier": "on_demand",
      "system_fingerprint": "fp_5cf921caa2",
      "usage": {
        "completion_time": 0.239357495,
        "completion_tokens": 142,
        "prompt_time": 0.01260021,
        "prompt_tokens": 274,
        "queue_time": 0.207821119,
        "total_time": 0.251957705,
        "total_tokens": 416
      },
      "usage_breakdown": null,
      "x_groq": {
        "id": "req_01k6zepeewe6stf3fm8nr713rx"
      }
    },
    "headers": {
      "alt-svc": [
        "h3=\":443\"; ma=86400"
      ],
      "cache-control": [
        "private, max-age=0, no-store, no-cache, must-revalidate"
      ],
      "cf-cache-status": [
        "DYNAMIC"
      ],
      "cf-ray": [
        "98add662cf9f5624-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Tue, 07 Oct 2025 13:45:11 GMT"
      ],
      "server": [
        "cloudflare"
      ],
      "set-cookie": [
        "__cf_bm=UBFtmT3eYWcfws6eueHRS37EB3Y1.k8IbqVsQTpvg3E-1759844711-1.0.1.1-xVsoRm2DXA7o2up.RWMJ8QFtJ6nT2KtB_wUCFKfMrU2leA8E_GqPyYT8flCbCGgn6SEfeCMYtEa5AZ5Vo52rBf6hOtdcvy2Qq7tH8J8JSJU; path=/; expires=Tue, 07-Oct-25 14:15:11 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Origin"
      ],
      "via": [
        "1.1 google"
      ],
      "x-groq-region": [
        "yul"
      ],
      "x-ratelimit-limit-requests": [
        "1000"
      ],
      "x-ratelimit-limit-tokens": [
        "6000"
      ],
      "x-ratelimit-remaining-requests": [
        "991"
      ],
      "x-ratelimit-remaining-tokens": [
        "2677"
      ],
      "x-ratelimit-reset-requests": [
        "12m57.089999999s"
      ],
      "x-ratelimit-reset-tokens": [
        "33.228s"
      ],
      "x-request-id": [
        "req_01k6zepeewe6stf3fm8nr713rx"
      ]
    },
    "status": 200
  }
}