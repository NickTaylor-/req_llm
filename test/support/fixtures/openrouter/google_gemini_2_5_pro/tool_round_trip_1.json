{
  "request": {
    "body": {
      "b64": "eyJtYXhfdG9rZW5zIjo2NTUzLCJtZXNzYWdlcyI6W3siY29udGVudCI6IlVzZSB0aGUgYWRkIHRvb2wgdG8gY29tcHV0ZSAyICsgMy4gQWZ0ZXIgdGhlIHRvb2wgcmVzdWx0IGFycml2ZXMsIHJlc3BvbmQgd2l0aCAnc3VtPTx2YWx1ZT4nLiIsInJvbGUiOiJ1c2VyIn1dLCJtb2RlbCI6Imdvb2dsZS9nZW1pbmktMi41LXBybyIsIm4iOjEsInNlZWQiOjQyLCJzdHJlYW0iOmZhbHNlLCJ0ZW1wZXJhdHVyZSI6MC4wLCJ0b29sX2Nob2ljZSI6eyJmdW5jdGlvbiI6eyJuYW1lIjoiYWRkIn0sInR5cGUiOiJmdW5jdGlvbiJ9LCJ0b29scyI6W3siZnVuY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJBZGQgdHdvIGludGVnZXJzIiwibmFtZSI6ImFkZCIsInBhcmFtZXRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOmZhbHNlLCJwcm9wZXJ0aWVzIjp7ImEiOnsidHlwZSI6ImludGVnZXIifSwiYiI6eyJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsiYSIsImIiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6ImZ1bmN0aW9uIn1dfQ=="
    },
    "canonical_json": {
      "max_tokens": 6553,
      "messages": [
        {
          "content": "Use the add tool to compute 2 + 3. After the tool result arrives, respond with 'sum=<value>'.",
          "role": "user"
        }
      ],
      "model": "google/gemini-2.5-pro",
      "n": 1,
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tool_choice": {
        "function": {
          "name": "add"
        },
        "type": "function"
      },
      "tools": [
        {
          "function": {
            "description": "Add two integers",
            "name": "add",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "a": {
                  "type": "integer"
                },
                "b": {
                  "type": "integer"
                }
              },
              "required": [
                "a",
                "b"
              ],
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://openrouter.ai/api/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "logprobs": null,
          "message": {
            "content": "",
            "reasoning": "**Analyzing Addition Requirements**\n\nI've received the request to add two numbers and have parsed the input. It's straightforward: I need to invoke the `add` tool. The values for 'a' and 'b' are clearly defined as 2 and 3, respectively. My next step is to execute the tool call with these specific parameters. Then, I will format the output.\n\n\n**Formulating Tool Invocation**\n\nI've now zeroed in on the optimal approach. The tool is identified, and the parameters are mapped: a=2 and b=3. Next up: constructing and executing the tool call. I am structuring the call to the `add` function using these parameters. Subsequently, I will parse and prepare the output, anticipating the format `sum=<value>`.\n\n\n",
            "reasoning_details": [
              {
                "format": "unknown",
                "index": 0,
                "text": "**Analyzing Addition Requirements**\n\nI've received the request to add two numbers and have parsed the input. It's straightforward: I need to invoke the `add` tool. The values for 'a' and 'b' are clearly defined as 2 and 3, respectively. My next step is to execute the tool call with these specific parameters. Then, I will format the output.\n\n\n**Formulating Tool Invocation**\n\nI've now zeroed in on the optimal approach. The tool is identified, and the parameters are mapped: a=2 and b=3. Next up: constructing and executing the tool call. I am structuring the call to the `add` function using these parameters. Subsequently, I will parse and prepare the output, anticipating the format `sum=<value>`.\n\n\n",
                "type": "reasoning.text"
              }
            ],
            "refusal": null,
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\"b\":3,\"a\":2}",
                  "name": "add"
                },
                "id": "tool_0_add_mGLNKQV1cL6VzBZcMbqf",
                "index": 0,
                "type": "function"
              }
            ]
          },
          "native_finish_reason": "STOP"
        }
      ],
      "created": 1760532557,
      "id": "gen-1760532557-EUd1LNq9Jo3iQi1Bn519",
      "model": "google/gemini-2.5-pro",
      "object": "chat.completion",
      "provider": "Google",
      "usage": {
        "completion_tokens": 286,
        "completion_tokens_details": {
          "image_tokens": 0,
          "reasoning_tokens": 281
        },
        "prompt_tokens": 37,
        "prompt_tokens_details": {
          "cached_tokens": 0
        },
        "total_tokens": 323
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "cf-ray": [
        "98ef6f81b8b0114e-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Wed, 15 Oct 2025 12:49:19 GMT"
      ],
      "permissions-policy": [
        "payment=(self \"https://checkout.stripe.com\" \"https://connect-js.stripe.com\" \"https://js.stripe.com\" \"https://*.js.stripe.com\" \"https://hooks.stripe.com\")"
      ],
      "referrer-policy": [
        "no-referrer, strict-origin-when-cross-origin"
      ],
      "server": [
        "cloudflare"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Accept-Encoding"
      ],
      "x-content-type-options": [
        "nosniff"
      ]
    },
    "status": 200
  }
}