{
  "request": {
    "body": {
      "b64": "eyJtYXhfdG9rZW5zIjoyNjIxNCwibWVzc2FnZXMiOlt7ImNvbnRlbnQiOiJXaGF0J3MgdGhlIHdlYXRoZXIgbGlrZSBpbiBQYXJpcywgRnJhbmNlPyIsInJvbGUiOiJ1c2VyIn1dLCJtb2RlbCI6Im5vdXNyZXNlYXJjaC9oZXJtZXMtNC00MDViIiwibiI6MSwicmVhc29uaW5nX2VmZm9ydCI6ImxvdyIsInNlZWQiOjQyLCJzdHJlYW0iOmZhbHNlLCJ0ZW1wZXJhdHVyZSI6MC4wLCJ0b29scyI6W3siZnVuY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJHZXQgY3VycmVudCB3ZWF0aGVyIGluZm9ybWF0aW9uIGZvciBhIGxvY2F0aW9uIiwibmFtZSI6ImdldF93ZWF0aGVyIiwicGFyYW1ldGVycyI6eyJwcm9wZXJ0aWVzIjp7ImxvY2F0aW9uIjp7InR5cGUiOiJzdHJpbmcifSwidW5pdCI6eyJlbnVtIjpbImNlbHNpdXMiLCJmYWhyZW5oZWl0Il0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxvY2F0aW9uIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJmdW5jdGlvbiJ9LHsiZnVuY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUZWxsIGEgZnVubnkgam9rZSIsIm5hbWUiOiJ0ZWxsX2pva2UiLCJwYXJhbWV0ZXJzIjp7InByb3BlcnRpZXMiOnsidG9waWMiOnsiZGVzY3JpcHRpb24iOiJUb3BpYyBmb3IgdGhlIGpva2UiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifSx7ImZ1bmN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiR2V0IHRoZSBjdXJyZW50IHRpbWUiLCJuYW1lIjoiZ2V0X3RpbWUiLCJwYXJhbWV0ZXJzIjp7InByb3BlcnRpZXMiOnt9LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifV19"
    },
    "canonical_json": {
      "max_tokens": 26214,
      "messages": [
        {
          "content": "What's the weather like in Paris, France?",
          "role": "user"
        }
      ],
      "model": "nousresearch/hermes-4-405b",
      "n": 1,
      "reasoning_effort": "low",
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tools": [
        {
          "function": {
            "description": "Get current weather information for a location",
            "name": "get_weather",
            "parameters": {
              "properties": {
                "location": {
                  "type": "string"
                },
                "unit": {
                  "enum": [
                    "celsius",
                    "fahrenheit"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "location"
              ],
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Tell a funny joke",
            "name": "tell_joke",
            "parameters": {
              "properties": {
                "topic": {
                  "description": "Topic for the joke",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Get the current time",
            "name": "get_time",
            "parameters": {
              "properties": {},
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://openrouter.ai/api/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "logprobs": null,
          "message": {
            "content": "\n\n",
            "reasoning": "\nOkay, the user is asking about the weather in Paris, France. Let me think about how to approach this. The available functions are get_weather, tell_joke, and get_time. The user wants weather information, so the get_weather function is the right choice here.\n\nFirst, I need to check the parameters for get_weather. The function requires a location, which is Paris, France. The unit parameter is optional, but since the user didn't specify, I should use the default, which is probably celsius. Wait, looking at the function description, the unit is an enum with celsius and fahrenheit. The default isn't specified, but maybe the function uses celsius by default. I should include the unit as celsius to be safe.\n\nSo the function call should be get_weather with location set to \"Paris, France\" and unit set to \"celsius\". That should give the current weather there. Let me make sure there are no other parameters needed. The parameters object requires location, which is provided, and unit is optional. So that's all. No need for any other functions here. The user didn't ask for a joke or the time, so just the weather function is needed.\n",
            "reasoning_details": [
              {
                "format": "unknown",
                "index": 0,
                "text": "\nOkay, the user is asking about the weather in Paris, France. Let me think about how to approach this. The available functions are get_weather, tell_joke, and get_time. The user wants weather information, so the get_weather function is the right choice here.\n\nFirst, I need to check the parameters for get_weather. The function requires a location, which is Paris, France. The unit parameter is optional, but since the user didn't specify, I should use the default, which is probably celsius. Wait, looking at the function description, the unit is an enum with celsius and fahrenheit. The default isn't specified, but maybe the function uses celsius by default. I should include the unit as celsius to be safe.\n\nSo the function call should be get_weather with location set to \"Paris, France\" and unit set to \"celsius\". That should give the current weather there. Let me make sure there are no other parameters needed. The parameters object requires location, which is provided, and unit is optional. So that's all. No need for any other functions here. The user didn't ask for a joke or the time, so just the weather function is needed.\n",
                "type": "reasoning.text"
              }
            ],
            "refusal": null,
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\"location\": \"Paris, France\", \"unit\": \"celsius\"}",
                  "name": "get_weather"
                },
                "id": "call_2956cbb3e10f4444920b6520",
                "index": 0,
                "type": "function"
              }
            ]
          },
          "native_finish_reason": "tool_calls"
        }
      ],
      "created": 1759845401,
      "id": "gen-1759845401-yWnESzBgy2oiG7z2Yng7",
      "model": "nousresearch/hermes-4-405b",
      "object": "chat.completion",
      "provider": "Chutes",
      "usage": {
        "completion_tokens": 278,
        "prompt_tokens": 336,
        "prompt_tokens_details": null,
        "total_tokens": 614
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "cf-ray": [
        "98ade73f1cc7b947-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Tue, 07 Oct 2025 13:56:42 GMT"
      ],
      "permissions-policy": [
        "payment=(self \"https://checkout.stripe.com\" \"https://connect-js.stripe.com\" \"https://js.stripe.com\" \"https://*.js.stripe.com\" \"https://hooks.stripe.com\")"
      ],
      "referrer-policy": [
        "no-referrer, strict-origin-when-cross-origin"
      ],
      "server": [
        "cloudflare"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Accept-Encoding"
      ],
      "x-content-type-options": [
        "nosniff"
      ]
    },
    "status": 200
  }
}