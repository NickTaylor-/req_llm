{
  "request": {
    "body": {
      "b64": "eyJtYXhfdG9rZW5zIjo1MDAsIm1lc3NhZ2VzIjpbeyJjb250ZW50IjoiR2VuZXJhdGUgYSBzb2Z0d2FyZSBlbmdpbmVlciBwcm9maWxlIiwicm9sZSI6InVzZXIifV0sIm1vZGVsIjoibm91c3Jlc2VhcmNoL2hlcm1lcy00LTQwNWIiLCJuIjoxLCJyZWFzb25pbmdfZWZmb3J0IjoibG93Iiwic2VlZCI6NDIsInN0cmVhbSI6ZmFsc2UsInRlbXBlcmF0dXJlIjowLjAsInRvb2xfY2hvaWNlIjp7ImZ1bmN0aW9uIjp7Im5hbWUiOiJzdHJ1Y3R1cmVkX291dHB1dCJ9LCJ0eXBlIjoiZnVuY3Rpb24ifSwidG9vbHMiOlt7ImZ1bmN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiR2VuZXJhdGUgc3RydWN0dXJlZCBvdXRwdXQgbWF0Y2hpbmcgdGhlIHByb3ZpZGVkIHNjaGVtYSIsIm5hbWUiOiJzdHJ1Y3R1cmVkX291dHB1dCIsInBhcmFtZXRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOmZhbHNlLCJwcm9wZXJ0aWVzIjp7ImFnZSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNvbidzIGFnZSBpbiB5ZWFycyIsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJQZXJzb24ncyBmdWxsIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm9jY3VwYXRpb24iOnsiZGVzY3JpcHRpb24iOiJQZXJzb24ncyBqb2Igb3IgcHJvZmVzc2lvbiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJhZ2UiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6ImZ1bmN0aW9uIn1dfQ=="
    },
    "canonical_json": {
      "max_tokens": 500,
      "messages": [
        {
          "content": "Generate a software engineer profile",
          "role": "user"
        }
      ],
      "model": "nousresearch/hermes-4-405b",
      "n": 1,
      "reasoning_effort": "low",
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tool_choice": {
        "function": {
          "name": "structured_output"
        },
        "type": "function"
      },
      "tools": [
        {
          "function": {
            "description": "Generate structured output matching the provided schema",
            "name": "structured_output",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "age": {
                  "description": "Person's age in years",
                  "minimum": 1,
                  "type": "integer"
                },
                "name": {
                  "description": "Person's full name",
                  "type": "string"
                },
                "occupation": {
                  "description": "Person's job or profession",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "age"
              ],
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://openrouter.ai/api/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "logprobs": null,
          "message": {
            "content": "",
            "reasoning": "\nOkay, the user wants me to generate a software engineer profile. Let me think about how to approach this. The function provided is structured_output, which requires a name, age, and occupation. The occupation here is \"software engineer\". \n\nFirst, I need to come up with a name. Maybe a common name like John Smith. Then, the age should be a reasonable number, maybe 28. Occupation is already given as software engineer. Wait, the function parameters require name, age, and occupation. So I need to make sure all three are included. Let me check the parameters again. Yes, name and age are required, occupation is optional but should be included here. \n\nSo the arguments for structured_output should be name: \"John Smith\", age: 28, occupation: \"Software Engineer\". That should meet the schema. Let me make sure there are no typos. The name is a string, age is an integer, occupation is a string. All looks good. I think that's all. Let me put it together.\n",
            "reasoning_details": [
              {
                "format": "unknown",
                "index": 0,
                "text": "\nOkay, the user wants me to generate a software engineer profile. Let me think about how to approach this. The function provided is structured_output, which requires a name, age, and occupation. The occupation here is \"software engineer\". \n\nFirst, I need to come up with a name. Maybe a common name like John Smith. Then, the age should be a reasonable number, maybe 28. Occupation is already given as software engineer. Wait, the function parameters require name, age, and occupation. So I need to make sure all three are included. Let me check the parameters again. Yes, name and age are required, occupation is optional but should be included here. \n\nSo the arguments for structured_output should be name: \"John Smith\", age: 28, occupation: \"Software Engineer\". That should meet the schema. Let me make sure there are no typos. The name is a string, age is an integer, occupation is a string. All looks good. I think that's all. Let me put it together.\n",
                "type": "reasoning.text"
              }
            ],
            "refusal": null,
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\"age\": 28, \"name\": \"John Smith\", \"occupation\": \"Software Engineer\"}",
                  "name": "structured_output"
                },
                "id": "call_399f9e49a3084c62b0cfa9be",
                "index": 0,
                "type": "function"
              }
            ]
          },
          "native_finish_reason": "tool_calls"
        }
      ],
      "created": 1760547044,
      "id": "gen-1760547044-Z0engUEI1ogPTyj3abrz",
      "model": "nousresearch/hermes-4-405b",
      "object": "chat.completion",
      "provider": "Chutes",
      "usage": {
        "completion_tokens": 247,
        "prompt_tokens": 286,
        "prompt_tokens_details": null,
        "total_tokens": 533
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "cf-ray": [
        "98f0d13279b8c8d4-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Wed, 15 Oct 2025 16:50:49 GMT"
      ],
      "permissions-policy": [
        "payment=(self \"https://checkout.stripe.com\" \"https://connect-js.stripe.com\" \"https://js.stripe.com\" \"https://*.js.stripe.com\" \"https://hooks.stripe.com\")"
      ],
      "referrer-policy": [
        "no-referrer, strict-origin-when-cross-origin"
      ],
      "server": [
        "cloudflare"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Accept-Encoding"
      ],
      "x-content-type-options": [
        "nosniff"
      ]
    },
    "status": 200
  }
}