{
  "request": {
    "body": {
      "b64": "eyJtYXhfdG9rZW5zIjo1MjQyOCwibWVzc2FnZXMiOlt7ImNvbnRlbnQiOiJXaGF0J3MgdGhlIHdlYXRoZXIgbGlrZSBpbiBQYXJpcywgRnJhbmNlPyIsInJvbGUiOiJ1c2VyIn1dLCJtb2RlbCI6InF3ZW4vcXdlbjMtbmV4dC04MGItYTNiLXRoaW5raW5nIiwibiI6MSwicmVhc29uaW5nX2VmZm9ydCI6ImxvdyIsInNlZWQiOjQyLCJzdHJlYW0iOmZhbHNlLCJ0ZW1wZXJhdHVyZSI6MC4wLCJ0b29scyI6W3siZnVuY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJHZXQgY3VycmVudCB3ZWF0aGVyIGluZm9ybWF0aW9uIGZvciBhIGxvY2F0aW9uIiwibmFtZSI6ImdldF93ZWF0aGVyIiwicGFyYW1ldGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6ZmFsc2UsInByb3BlcnRpZXMiOnsibG9jYXRpb24iOnsidHlwZSI6InN0cmluZyJ9LCJ1bml0Ijp7ImVudW0iOlsiY2Vsc2l1cyIsImZhaHJlbmhlaXQiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibG9jYXRpb24iXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6ImZ1bmN0aW9uIn0seyJmdW5jdGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRlbGwgYSBmdW5ueSBqb2tlIiwibmFtZSI6InRlbGxfam9rZSIsInBhcmFtZXRlcnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOmZhbHNlLCJwcm9wZXJ0aWVzIjp7InRvcGljIjp7ImRlc2NyaXB0aW9uIjoiVG9waWMgZm9yIHRoZSBqb2tlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6ImZ1bmN0aW9uIn0seyJmdW5jdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkdldCB0aGUgY3VycmVudCB0aW1lIiwibmFtZSI6ImdldF90aW1lIiwicGFyYW1ldGVycyI6eyJwcm9wZXJ0aWVzIjp7fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6ImZ1bmN0aW9uIn1dfQ=="
    },
    "canonical_json": {
      "max_tokens": 52428,
      "messages": [
        {
          "content": "What's the weather like in Paris, France?",
          "role": "user"
        }
      ],
      "model": "qwen/qwen3-next-80b-a3b-thinking",
      "n": 1,
      "reasoning_effort": "low",
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tools": [
        {
          "function": {
            "description": "Get current weather information for a location",
            "name": "get_weather",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "location": {
                  "type": "string"
                },
                "unit": {
                  "enum": [
                    "celsius",
                    "fahrenheit"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "location"
              ],
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Tell a funny joke",
            "name": "tell_joke",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "Topic for the joke",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Get the current time",
            "name": "get_time",
            "parameters": {
              "properties": {},
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://openrouter.ai/api/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "logprobs": null,
          "message": {
            "content": "\n\n",
            "reasoning": "Okay, the user is asking about the weather in Paris, France. Let me check the available tools. There's a get_weather function that requires location and optionally unit. The location is specified as Paris, France. The unit isn't mentioned, so maybe default to Celsius? But the parameters say unit is optional, with enum celsius or fahrenheit. Since the user didn't specify, maybe I should just use the location and not include unit, or maybe default to celsius. Wait, the required field is only location, so unit is optional. So I can call get_weather with location \"Paris, France\" and maybe omit unit. But sometimes people might expect Fahrenheit, but in France they use Celsius, so probably safe to use Celsius. But the function allows unit parameter, but since it's optional, maybe just provide location. Let me check the tool definition again. The parameters for get_weather: required is location, unit is optional with enum. So the correct call would be {\"location\": \"Paris, France\"} and maybe include unit as \"celsius\" if needed. But the user didn't specify, so perhaps the function can handle it without unit, or maybe the default is Celsius. But to be safe, maybe include unit as celsius. Wait, the problem is that the user didn't specify, so maybe the tool expects the unit to be provided. But according to the parameters, unit is not required. So the function can be called with just location. So the correct tool call is {\"name\": \"get_weather\", \"arguments\": {\"location\": \"Paris, France\"}}. Alternatively, maybe the system expects to include unit, but since it's optional, it's okay to omit. Let me check the tool's parameters again. The parameters for get_weather: required is [\"location\"], so unit is optional. So yes, just location is needed. So the tool call should have location as Paris, France. So I should generate the tool call with that.\n",
            "reasoning_details": [
              {
                "format": "unknown",
                "index": 0,
                "text": "Okay, the user is asking about the weather in Paris, France. Let me check the available tools. There's a get_weather function that requires location and optionally unit. The location is specified as Paris, France. The unit isn't mentioned, so maybe default to Celsius? But the parameters say unit is optional, with enum celsius or fahrenheit. Since the user didn't specify, maybe I should just use the location and not include unit, or maybe default to celsius. Wait, the required field is only location, so unit is optional. So I can call get_weather with location \"Paris, France\" and maybe omit unit. But sometimes people might expect Fahrenheit, but in France they use Celsius, so probably safe to use Celsius. But the function allows unit parameter, but since it's optional, maybe just provide location. Let me check the tool definition again. The parameters for get_weather: required is location, unit is optional with enum. So the correct call would be {\"location\": \"Paris, France\"} and maybe include unit as \"celsius\" if needed. But the user didn't specify, so perhaps the function can handle it without unit, or maybe the default is Celsius. But to be safe, maybe include unit as celsius. Wait, the problem is that the user didn't specify, so maybe the tool expects the unit to be provided. But according to the parameters, unit is not required. So the function can be called with just location. So the correct tool call is {\"name\": \"get_weather\", \"arguments\": {\"location\": \"Paris, France\"}}. Alternatively, maybe the system expects to include unit, but since it's optional, it's okay to omit. Let me check the tool's parameters again. The parameters for get_weather: required is [\"location\"], so unit is optional. So yes, just location is needed. So the tool call should have location as Paris, France. So I should generate the tool call with that.\n",
                "type": "reasoning.text"
              }
            ],
            "refusal": null,
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\"location\": \"Paris, France\"}",
                  "name": "get_weather"
                },
                "id": "call_79d3fcd665a84808abe29054",
                "index": 0,
                "type": "function"
              }
            ]
          },
          "native_finish_reason": "tool_calls"
        }
      ],
      "created": 1760532575,
      "id": "gen-1760532575-BlY95YDJlx03qPnnO5Tx",
      "model": "qwen/qwen3-next-80b-a3b-thinking",
      "object": "chat.completion",
      "provider": "AtlasCloud",
      "usage": {
        "completion_tokens": 424,
        "prompt_tokens": 273,
        "total_tokens": 697
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "cf-ray": [
        "98ef6ff1ce5861f2-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Wed, 15 Oct 2025 12:49:35 GMT"
      ],
      "permissions-policy": [
        "payment=(self \"https://checkout.stripe.com\" \"https://connect-js.stripe.com\" \"https://js.stripe.com\" \"https://*.js.stripe.com\" \"https://hooks.stripe.com\")"
      ],
      "referrer-policy": [
        "no-referrer, strict-origin-when-cross-origin"
      ],
      "server": [
        "cloudflare"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Accept-Encoding"
      ],
      "x-content-type-options": [
        "nosniff"
      ]
    },
    "status": 200
  }
}