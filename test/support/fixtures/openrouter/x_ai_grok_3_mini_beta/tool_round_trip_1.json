{
  "request": {
    "body": {
      "b64": "eyJtYXhfdG9rZW5zIjo4MTksIm1lc3NhZ2VzIjpbeyJjb250ZW50IjoiVXNlIHRoZSBhZGQgdG9vbCB0byBjb21wdXRlIDIgKyAzLiBBZnRlciB0aGUgdG9vbCByZXN1bHQgYXJyaXZlcywgcmVzcG9uZCB3aXRoICdzdW09PHZhbHVlPicuIiwicm9sZSI6InVzZXIifV0sIm1vZGVsIjoieC1haS9ncm9rLTMtbWluaS1iZXRhIiwibiI6MSwic2VlZCI6NDIsInN0cmVhbSI6ZmFsc2UsInRlbXBlcmF0dXJlIjowLjAsInRvb2xfY2hvaWNlIjp7ImZ1bmN0aW9uIjp7Im5hbWUiOiJhZGQifSwidHlwZSI6ImZ1bmN0aW9uIn0sInRvb2xzIjpbeyJmdW5jdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkFkZCB0d28gaW50ZWdlcnMiLCJuYW1lIjoiYWRkIiwicGFyYW1ldGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6ZmFsc2UsInByb3BlcnRpZXMiOnsiYSI6eyJ0eXBlIjoiaW50ZWdlciJ9LCJiIjp7InR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJhIiwiYiJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifV19"
    },
    "canonical_json": {
      "max_tokens": 819,
      "messages": [
        {
          "content": "Use the add tool to compute 2 + 3. After the tool result arrives, respond with 'sum=<value>'.",
          "role": "user"
        }
      ],
      "model": "x-ai/grok-3-mini-beta",
      "n": 1,
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tool_choice": {
        "function": {
          "name": "add"
        },
        "type": "function"
      },
      "tools": [
        {
          "function": {
            "description": "Add two integers",
            "name": "add",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "a": {
                  "type": "integer"
                },
                "b": {
                  "type": "integer"
                }
              },
              "required": [
                "a",
                "b"
              ],
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://openrouter.ai/api/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "logprobs": null,
          "message": {
            "content": " ",
            "reasoning": "First, the user wants me to use the \"add\" function to compute 2 + 3. The available functions include \"add\", which takes two integers, a and b.\n\nI need to call this function by outputting a JSON in the specified format, enclosed in <function_call> tags.\n\nThe format is: <function_call>{\"action\": \"function_name\", \"action_input\": {\"parameter\": \"argument\"}}</function_call>\n\nFor the \"add\" function, the action is \"add\", and the action_input should be an object with \"a\" and \"b\" as required parameters.\n\nSo, for 2 + 3, I should set a to 2 and b to 3.\n\nAfter calling the function, the user says: \"After the tool result arrives, respond with 'sum=<value>'.\" But as per my system prompt, I just need to make the function call in my response. The actual execution and subsequent response might be handled externally.\n\nMy response MUST include the function call in the specified way. I shouldn't make the response verbose; keep it clear.\n\nThe user is instructing me on what to do after the result, but I think that's for my next step after the function call is processed. For now, I just need to initiate the function call.\n\nFinally, structure my response: Just the function call, nothing else, to keep it clear.\n\nSo, the function call should be:\n\n<function_call>{\"action\": \"add\", \"action_input\": {\"a\": 2, \"b\": 3}}</function_call>\n\nThat matches the requirements.",
            "reasoning_details": [
              {
                "format": "unknown",
                "index": 0,
                "text": "First, the user wants me to use the \"add\" function to compute 2 + 3. The available functions include \"add\", which takes two integers, a and b.\n\nI need to call this function by outputting a JSON in the specified format, enclosed in <function_call> tags.\n\nThe format is: <function_call>{\"action\": \"function_name\", \"action_input\": {\"parameter\": \"argument\"}}</function_call>\n\nFor the \"add\" function, the action is \"add\", and the action_input should be an object with \"a\" and \"b\" as required parameters.\n\nSo, for 2 + 3, I should set a to 2 and b to 3.\n\nAfter calling the function, the user says: \"After the tool result arrives, respond with 'sum=<value>'.\" But as per my system prompt, I just need to make the function call in my response. The actual execution and subsequent response might be handled externally.\n\nMy response MUST include the function call in the specified way. I shouldn't make the response verbose; keep it clear.\n\nThe user is instructing me on what to do after the result, but I think that's for my next step after the function call is processed. For now, I just need to initiate the function call.\n\nFinally, structure my response: Just the function call, nothing else, to keep it clear.\n\nSo, the function call should be:\n\n<function_call>{\"action\": \"add\", \"action_input\": {\"a\": 2, \"b\": 3}}</function_call>\n\nThat matches the requirements.",
                "type": "reasoning.text"
              }
            ],
            "refusal": null,
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\"a\":2,\"b\":3}",
                  "name": "add"
                },
                "id": "call_55372073",
                "index": 0,
                "type": "function"
              }
            ]
          },
          "native_finish_reason": "tool_calls"
        }
      ],
      "created": 1760532591,
      "id": "gen-1760532591-HDH5vhs9AvzH9GGtxqLo",
      "model": "x-ai/grok-3-mini",
      "object": "chat.completion",
      "provider": "xAI",
      "system_fingerprint": "fp_4fae27f477",
      "usage": {
        "completion_tokens": 350,
        "completion_tokens_details": {
          "reasoning_tokens": 320
        },
        "prompt_tokens": 187,
        "prompt_tokens_details": {
          "audio_tokens": 0,
          "cached_tokens": 186
        },
        "total_tokens": 537
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "cf-ray": [
        "98ef7056aebe1923-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Wed, 15 Oct 2025 12:49:51 GMT"
      ],
      "permissions-policy": [
        "payment=(self \"https://checkout.stripe.com\" \"https://connect-js.stripe.com\" \"https://js.stripe.com\" \"https://*.js.stripe.com\" \"https://hooks.stripe.com\")"
      ],
      "referrer-policy": [
        "no-referrer, strict-origin-when-cross-origin"
      ],
      "server": [
        "cloudflare"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "Accept-Encoding"
      ],
      "x-content-type-options": [
        "nosniff"
      ]
    },
    "status": 200
  }
}