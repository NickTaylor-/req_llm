{
  "request": {
    "body": {
      "b64": "eyJtYXhfY29tcGxldGlvbl90b2tlbnMiOjgxOSwibWVzc2FnZXMiOlt7ImNvbnRlbnQiOiJXaGF0J3MgdGhlIHdlYXRoZXIgbGlrZSBpbiBQYXJpcywgRnJhbmNlPyIsInJvbGUiOiJ1c2VyIn1dLCJtb2RlbCI6Imdyb2stMy1taW5pLWZhc3QtbGF0ZXN0Iiwic2VlZCI6NDIsInN0cmVhbSI6ZmFsc2UsInRlbXBlcmF0dXJlIjowLjAsInRvb2xzIjpbeyJmdW5jdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkdldCBjdXJyZW50IHdlYXRoZXIgaW5mb3JtYXRpb24gZm9yIGEgbG9jYXRpb24iLCJuYW1lIjoiZ2V0X3dlYXRoZXIiLCJwYXJhbWV0ZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjpmYWxzZSwicHJvcGVydGllcyI6eyJsb2NhdGlvbiI6eyJ0eXBlIjoic3RyaW5nIn0sInVuaXQiOnsiZW51bSI6WyJjZWxzaXVzIiwiZmFocmVuaGVpdCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsb2NhdGlvbiJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifSx7ImZ1bmN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGVsbCBhIGZ1bm55IGpva2UiLCJuYW1lIjoidGVsbF9qb2tlIiwicGFyYW1ldGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6ZmFsc2UsInByb3BlcnRpZXMiOnsidG9waWMiOnsiZGVzY3JpcHRpb24iOiJUb3BpYyBmb3IgdGhlIGpva2UiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifSx7ImZ1bmN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiR2V0IHRoZSBjdXJyZW50IHRpbWUiLCJuYW1lIjoiZ2V0X3RpbWUiLCJwYXJhbWV0ZXJzIjp7InByb3BlcnRpZXMiOnt9LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifV19"
    },
    "canonical_json": {
      "max_completion_tokens": 819,
      "messages": [
        {
          "content": "What's the weather like in Paris, France?",
          "role": "user"
        }
      ],
      "model": "grok-3-mini-fast-latest",
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tools": [
        {
          "function": {
            "description": "Get current weather information for a location",
            "name": "get_weather",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "location": {
                  "type": "string"
                },
                "unit": {
                  "enum": [
                    "celsius",
                    "fahrenheit"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "location"
              ],
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Tell a funny joke",
            "name": "tell_joke",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "topic": {
                  "description": "Topic for the joke",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "function"
        },
        {
          "function": {
            "description": "Get the current time",
            "name": "get_time",
            "parameters": {
              "properties": {},
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://api.x.ai/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "message": {
            "content": "",
            "reasoning_content": "First, the user is asking about the weather in Paris, France. I have a function called \"get_weather\" that matches this request. It requires a \"location\" parameter, which is a string.\n\nThe location is clearly \"Paris, France\". That's straightforward and inferable from the query.\n\nThe function also has an optional \"unit\" parameter, which can be \"celsius\" or \"fahrenheit\". The user didn't specify a unit, so I don't need to include it if it's not required. The function's parameters show that only \"location\" is required.\n\nI should call the function with the necessary parameters. So, I'll use: <function_call>{\"action\": \"get_weather\", \"action_input\": {\"location\": \"Paris, France\"}}</function_call>\n\nAfter calling this function, I might need to respond based on the result, but for now, this is the logical next step.\n\nMy response should only include the function call if that's what's needed. The instructions say: \"You are only permitted to use the <function_call> tag in your response only if you have made the decision to call a function.\" So, I shouldn't add extra text unless necessary.\n\nKeep the response clear and not verbose. Just the function call.\n\nFinally, confirm: Is there anything unclear? No, the query matches the function perfectly.",
            "refusal": null,
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\"location\":\"Paris, France\"}",
                  "name": "get_weather"
                },
                "id": "call_27796415",
                "type": "function"
              }
            ]
          }
        }
      ],
      "created": 1760471288,
      "id": "356fdf9d-7ccc-47e1-5e2e-f63c7c54c1be_us-east-1",
      "model": "grok-3-mini",
      "object": "chat.completion",
      "system_fingerprint": "fp_4fae27f477",
      "usage": {
        "completion_tokens": 28,
        "completion_tokens_details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 267,
          "rejected_prediction_tokens": 0
        },
        "num_sources_used": 0,
        "prompt_tokens": 362,
        "prompt_tokens_details": {
          "audio_tokens": 0,
          "cached_tokens": 361,
          "image_tokens": 0,
          "text_tokens": 362
        },
        "total_tokens": 657
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "access-control-expose-headers": [
        "*"
      ],
      "cf-cache-status": [
        "DYNAMIC"
      ],
      "cf-ray": [
        "98e997aed98b338f-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Tue, 14 Oct 2025 19:48:11 GMT"
      ],
      "server": [
        "cloudflare"
      ],
      "set-cookie": [
        "__cf_bm=WPCS602C2WRVPYS.B28Uuffz2RdRkfbNXgrG51Exirs-1760471291-1.0.1.1-otF4kaxZkO2CHE7F9T4ZbHImbpH4K60XzFzNTK1ZA2JtFuunaJ_V72o1Co6w.Wuwc9Pi8N_v.tgTQVOxtRpa_YRKjnmoJJrOH2rdx_8AjIM; path=/; expires=Tue, 14-Oct-25 20:18:11 GMT; domain=.x.ai; HttpOnly; Secure; SameSite=None"
      ],
      "strict-transport-security": [
        "max-age=31536000"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "origin, access-control-request-method, access-control-request-headers"
      ],
      "x-request-id": [
        "00-153c24bc21bad2ce8170334425ca2b23-533ceb44005a0819-01"
      ],
      "x-zero-data-retention": [
        "false"
      ]
    },
    "status": 200
  }
}