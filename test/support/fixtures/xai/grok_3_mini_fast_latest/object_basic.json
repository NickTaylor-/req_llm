{
  "request": {
    "body": {
      "b64": "eyJtYXhfY29tcGxldGlvbl90b2tlbnMiOjUwMCwibWVzc2FnZXMiOlt7ImNvbnRlbnQiOiJHZW5lcmF0ZSBhIHNvZnR3YXJlIGVuZ2luZWVyIHByb2ZpbGUiLCJyb2xlIjoidXNlciJ9XSwibW9kZWwiOiJncm9rLTMtbWluaS1mYXN0LWxhdGVzdCIsInBhcmFsbGVsX3Rvb2xfY2FsbHMiOmZhbHNlLCJyZXNwb25zZV9mb3JtYXQiOnsianNvbl9zY2hlbWEiOnsibmFtZSI6Im91dHB1dF9zY2hlbWEiLCJzY2hlbWEiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOmZhbHNlLCJwcm9wZXJ0aWVzIjp7ImFnZSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNvbidzIGFnZSBpbiB5ZWFycyIsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJQZXJzb24ncyBmdWxsIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm9jY3VwYXRpb24iOnsiZGVzY3JpcHRpb24iOiJQZXJzb24ncyBqb2Igb3IgcHJvZmVzc2lvbiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJhZ2UiXSwidHlwZSI6Im9iamVjdCJ9LCJzdHJpY3QiOnRydWV9LCJ0eXBlIjoianNvbl9zY2hlbWEifSwic2VlZCI6NDIsInN0cmVhbSI6ZmFsc2UsInRlbXBlcmF0dXJlIjowLjB9"
    },
    "canonical_json": {
      "max_completion_tokens": 500,
      "messages": [
        {
          "content": "Generate a software engineer profile",
          "role": "user"
        }
      ],
      "model": "grok-3-mini-fast-latest",
      "parallel_tool_calls": false,
      "response_format": {
        "json_schema": {
          "name": "output_schema",
          "schema": {
            "additionalProperties": false,
            "properties": {
              "age": {
                "description": "Person's age in years",
                "minimum": 1,
                "type": "integer"
              },
              "name": {
                "description": "Person's full name",
                "type": "string"
              },
              "occupation": {
                "description": "Person's job or profession",
                "type": "string"
              }
            },
            "required": [
              "name",
              "age"
            ],
            "type": "object"
          },
          "strict": true
        },
        "type": "json_schema"
      },
      "seed": 42,
      "stream": false,
      "temperature": 0.0
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://api.x.ai/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "stop",
          "index": 0,
          "message": {
            "content": "{\"age\":30,\"name\":\"John Doe\",\"occupation\":\"Software Engineer\"}",
            "reasoning_content": "First, the user input is: \"Generate a software engineer profile\". But I have to respond based on the provided schema. The schema defines an object with properties: \"name\", \"age\", and \"occupation\". It's required to include \"name\" and \"age\", and \"occupation\" is optional but I can include it.\n\nThe schema is:\n\n{\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"age\": {\"description\": \"Person's age in years\", \"minimum\": 1, \"type\": \"integer\"},\n    \"name\": {\"description\": \"Person's full name\", \"type\": \"string\"},\n    \"occupation\": {\"description\": \"Person's job or profession\", \"type\": \"string\"}\n  },\n  \"required\": [\"name\", \"age\"],\n  \"type\": \"object\"\n}\n\nSo, my response must be a single JSON string that matches this schema exactly. That means I need to output something like: {\"name\": \"Some Name\", \"age\": Some Number, \"occupation\": \"Some Job\"}\n\nThe user is asking for a \"software engineer profile\", so I should make the occupation related to that. For example, set \"occupation\" to \"Software Engineer\".\n\nI need to invent a name and an age since no specific details are provided. Let's pick something generic: name could be \"John Doe\", age could be 30, and occupation \"Software Engineer\".\n\nRemember, the output MUST be a single JSON string, and it has to conform to the schema. No additional text, just the JSON.\n\nFinal output should look like: {\"name\": \"John Doe\", \"age\": 30, \"occupation\": \"Software Engineer\"}\n\nThat includes all properties. The required ones are \"name\" and \"age\", so I could omit \"occupation\", but since the query is about a software engineer, it's better to include it.\n\nThe schema allows \"occupation\", and it fits, so I'll include it.\n\nEnsure that \"age\" is an integer greater than or equal to 1.\n\nSo, my plan: Create a JSON object with:\n\n- \"name\": \"John Doe\"\n\n- \"age\": 30\n\n- \"occupation\": \"Software Engineer\"\n\nThen, output it as a string.",
            "refusal": null,
            "role": "assistant"
          }
        }
      ],
      "created": 1760458028,
      "id": "4dbeae4a-a906-793f-9615-51574ce4df16_us-east-1",
      "model": "grok-3-mini",
      "object": "chat.completion",
      "system_fingerprint": "fp_4fae27f477",
      "usage": {
        "completion_tokens": 15,
        "completion_tokens_details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 452,
          "rejected_prediction_tokens": 0
        },
        "num_sources_used": 0,
        "prompt_tokens": 112,
        "prompt_tokens_details": {
          "audio_tokens": 0,
          "cached_tokens": 111,
          "image_tokens": 0,
          "text_tokens": 112
        },
        "total_tokens": 579
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "access-control-expose-headers": [
        "*"
      ],
      "cf-cache-status": [
        "DYNAMIC"
      ],
      "cf-ray": [
        "98e853f6f8120044-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Tue, 14 Oct 2025 16:07:16 GMT"
      ],
      "server": [
        "cloudflare"
      ],
      "set-cookie": [
        "__cf_bm=t.TPut7qhTIKK_6jkTj.Dowflh3MoOIg0Kf2qg0zkFw-1760458036-1.0.1.1-iKnM6T6rzt6kIQBM.aqoj_9nou_Rcwlf7MKHPsmDD6rP5yANPnYN36aNeZgrv2eR1fIvI4KhIOwG4RKdkCur2gpc3WZVennuIuD.MFnb4co; path=/; expires=Tue, 14-Oct-25 16:37:16 GMT; domain=.x.ai; HttpOnly; Secure; SameSite=None"
      ],
      "strict-transport-security": [
        "max-age=31536000"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "origin, access-control-request-method, access-control-request-headers"
      ],
      "x-request-id": [
        "00-f6e664e037b98ef9ea13e6e4aa69a0c1-e255fc2200532568-01"
      ],
      "x-zero-data-retention": [
        "false"
      ]
    },
    "status": 200
  }
}