{
  "request": {
    "body": {
      "b64": "eyJtYXhfY29tcGxldGlvbl90b2tlbnMiOjUwMCwibWVzc2FnZXMiOlt7ImNvbnRlbnQiOiJHZW5lcmF0ZSBhIHNvZnR3YXJlIGVuZ2luZWVyIHByb2ZpbGUiLCJyb2xlIjoidXNlciJ9XSwibW9kZWwiOiJncm9rLTMtbWluaS1mYXN0LWxhdGVzdCIsInBhcmFsbGVsX3Rvb2xfY2FsbHMiOmZhbHNlLCJyZXNwb25zZV9mb3JtYXQiOnsianNvbl9zY2hlbWEiOnsibmFtZSI6Im91dHB1dF9zY2hlbWEiLCJzY2hlbWEiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOmZhbHNlLCJwcm9wZXJ0aWVzIjp7ImFnZSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNvbidzIGFnZSBpbiB5ZWFycyIsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJQZXJzb24ncyBmdWxsIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm9jY3VwYXRpb24iOnsiZGVzY3JpcHRpb24iOiJQZXJzb24ncyBqb2Igb3IgcHJvZmVzc2lvbiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJhZ2UiXSwidHlwZSI6Im9iamVjdCJ9LCJzdHJpY3QiOnRydWV9LCJ0eXBlIjoianNvbl9zY2hlbWEifSwic2VlZCI6NDIsInN0cmVhbSI6ZmFsc2UsInRlbXBlcmF0dXJlIjowLjB9"
    },
    "canonical_json": {
      "max_completion_tokens": 500,
      "messages": [
        {
          "content": "Generate a software engineer profile",
          "role": "user"
        }
      ],
      "model": "grok-3-mini-fast-latest",
      "parallel_tool_calls": false,
      "response_format": {
        "json_schema": {
          "name": "output_schema",
          "schema": {
            "additionalProperties": false,
            "properties": {
              "age": {
                "description": "Person's age in years",
                "minimum": 1,
                "type": "integer"
              },
              "name": {
                "description": "Person's full name",
                "type": "string"
              },
              "occupation": {
                "description": "Person's job or profession",
                "type": "string"
              }
            },
            "required": [
              "name",
              "age"
            ],
            "type": "object"
          },
          "strict": true
        },
        "type": "json_schema"
      },
      "seed": 42,
      "stream": false,
      "temperature": 0.0
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://api.x.ai/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "stop",
          "index": 0,
          "message": {
            "content": "{\"age\":30,\"name\":\"Alice Johnson\",\"occupation\":\"Software Engineer\"}",
            "reasoning_content": "First, the user input is: \"Generate a software engineer profile\". But I have to respond based on the provided schema. The schema defines a JSON object with properties: \"name\", \"age\", and \"occupation\". It's required to include \"name\" and \"age\", and \"occupation\" is optional but fits here.\n\nThe schema is:\n{\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"age\": {\"description\": \"Person's age in years\", \"minimum\": 1, \"type\": \"integer\"},\n    \"name\": {\"description\": \"Person's full name\", \"type\": \"string\"},\n    \"occupation\": {\"description\": \"Person's job or profession\", \"type\": \"string\"}\n  },\n  \"required\": [\"name\", \"age\"],\n  \"type\": \"object\"\n}\n\nSo, my response must be a single JSON string that matches this schema exactly. That means I need to output something like: {\"name\": \"Some Name\", \"age\": Some Number, \"occupation\": \"Some Occupation\"}\n\nThe user is asking for a software engineer profile, so I should fill in the fields accordingly. For example:\n- Occupation: \"Software Engineer\"\n- Name: I need to make one up, since it's not specified.\n- Age: Also make one up, but it has to be an integer greater than or equal to 1.\n\nI must ensure that my output is only the JSON string, nothing else. The instructions say: \"Your output MUST be a single JSON string. You MUST use <user_json_schema> to format the JSON string.\"\n\nSo, I shouldn't add any extra text; just the JSON.\n\nLet me think of sample values:\n- Name: \"Alice Johnson\" (a full name)\n- Age: 30 (an integer, minimum 1)\n- Occupation: \"Software Engineer\" (based on the user's request)\n\nThis fits perfectly.\n\nFinal output should be: {\"name\": \"Alice Johnson\", \"age\": 30, \"occupation\": \"Software Engineer\"}\n\nMake sure it's a valid JSON string.",
            "refusal": null,
            "role": "assistant"
          }
        }
      ],
      "created": 1760471297,
      "id": "7a9e869e-bdb7-74a6-438c-20f8ae46d465_us-east-1",
      "model": "grok-3-mini",
      "object": "chat.completion",
      "system_fingerprint": "fp_4fae27f477",
      "usage": {
        "completion_tokens": 15,
        "completion_tokens_details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 418,
          "rejected_prediction_tokens": 0
        },
        "num_sources_used": 0,
        "prompt_tokens": 112,
        "prompt_tokens_details": {
          "audio_tokens": 0,
          "cached_tokens": 111,
          "image_tokens": 0,
          "text_tokens": 112
        },
        "total_tokens": 545
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "access-control-expose-headers": [
        "*"
      ],
      "cf-cache-status": [
        "DYNAMIC"
      ],
      "cf-ray": [
        "98e997e88b9f338f-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Tue, 14 Oct 2025 19:48:22 GMT"
      ],
      "server": [
        "cloudflare"
      ],
      "set-cookie": [
        "__cf_bm=Z5NTmPTbhB7gKKy6Ma6EPMlqaR_Q55gf8XgJfo5EktM-1760471302-1.0.1.1-TMSAduJU_l9WQ8.nv5K9g.RDCCFdiggK9tfIcTpbqQ5702HkSa9zuJeLN8PZEfJkhRk.E1nLQbCPlnb6QvwGQVHvLoJk2hZsj0je8tQPw_g; path=/; expires=Tue, 14-Oct-25 20:18:22 GMT; domain=.x.ai; HttpOnly; Secure; SameSite=None"
      ],
      "strict-transport-security": [
        "max-age=31536000"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "origin, access-control-request-method, access-control-request-headers"
      ],
      "x-request-id": [
        "00-2133fa3c35849f40a035640f8423ed21-cf45cf62005a9c88-01"
      ],
      "x-zero-data-retention": [
        "false"
      ]
    },
    "status": 200
  }
}