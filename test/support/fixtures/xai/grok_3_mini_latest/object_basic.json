{
  "request": {
    "body": {
      "b64": "eyJtYXhfY29tcGxldGlvbl90b2tlbnMiOjUwMCwibWVzc2FnZXMiOlt7ImNvbnRlbnQiOiJHZW5lcmF0ZSBhIHNvZnR3YXJlIGVuZ2luZWVyIHByb2ZpbGUiLCJyb2xlIjoidXNlciJ9XSwibW9kZWwiOiJncm9rLTMtbWluaS1sYXRlc3QiLCJwYXJhbGxlbF90b29sX2NhbGxzIjpmYWxzZSwicmVzcG9uc2VfZm9ybWF0Ijp7Impzb25fc2NoZW1hIjp7Im5hbWUiOiJvdXRwdXRfc2NoZW1hIiwic2NoZW1hIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjpmYWxzZSwicHJvcGVydGllcyI6eyJhZ2UiOnsiZGVzY3JpcHRpb24iOiJQZXJzb24ncyBhZ2UgaW4geWVhcnMiLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiUGVyc29uJ3MgZnVsbCBuYW1lIiwidHlwZSI6InN0cmluZyJ9LCJvY2N1cGF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiUGVyc29uJ3Mgam9iIG9yIHByb2Zlc3Npb24iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwiYWdlIl0sInR5cGUiOiJvYmplY3QifSwic3RyaWN0Ijp0cnVlfSwidHlwZSI6Impzb25fc2NoZW1hIn0sInNlZWQiOjQyLCJzdHJlYW0iOmZhbHNlLCJ0ZW1wZXJhdHVyZSI6MC4wfQ=="
    },
    "canonical_json": {
      "max_completion_tokens": 500,
      "messages": [
        {
          "content": "Generate a software engineer profile",
          "role": "user"
        }
      ],
      "model": "grok-3-mini-latest",
      "parallel_tool_calls": false,
      "response_format": {
        "json_schema": {
          "name": "output_schema",
          "schema": {
            "additionalProperties": false,
            "properties": {
              "age": {
                "description": "Person's age in years",
                "minimum": 1,
                "type": "integer"
              },
              "name": {
                "description": "Person's full name",
                "type": "string"
              },
              "occupation": {
                "description": "Person's job or profession",
                "type": "string"
              }
            },
            "required": [
              "name",
              "age"
            ],
            "type": "object"
          },
          "strict": true
        },
        "type": "json_schema"
      },
      "seed": 42,
      "stream": false,
      "temperature": 0.0
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "user-agent": [
        "req/0.5.15"
      ]
    },
    "method": "post",
    "url": "https://api.x.ai/v1/chat/completions"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "stop",
          "index": 0,
          "message": {
            "content": "{\"age\":28,\"name\":\"Alice Smith\",\"occupation\":\"Software Engineer\"}",
            "reasoning_content": "First, the user input is: \"Generate a software engineer profile\". But I have to respond based on the provided schema. The schema defines a JSON object with properties: \"name\", \"age\", and \"occupation\". It's required to include \"name\" and \"age\", and \"occupation\" is optional but fits here.\n\nThe schema is:\n{\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"age\": {\"description\": \"Person's age in years\", \"minimum\": 1, \"type\": \"integer\"},\n    \"name\": {\"description\": \"Person's full name\", \"type\": \"string\"},\n    \"occupation\": {\"description\": \"Person's job or profession\", \"type\": \"string\"}\n  },\n  \"required\": [\"name\", \"age\"],\n  \"type\": \"object\"\n}\n\nSo, my response must be a single JSON string that matches this schema exactly. That means I need to output something like: {\"name\": \"Some Name\", \"age\": Some Number, \"occupation\": \"Some Occupation\"}\n\nThe user asked for a \"software engineer profile\", so I should make up a profile that fits. For example:\n- Name: Something like \"John Doe\"\n- Age: A reasonable age for a software engineer, say 30\n- Occupation: \"Software Engineer\"\n\nI have to ensure that my output is strictly a JSON string and follows the schema. No extra text, just the JSON.\n\nSteps:\n1. Choose values:\n   - Name: Let's use \"Alice Smith\" as a full name.\n   - Age: An integer greater than or equal to 1, say 28.\n   - Occupation: \"Software Engineer\" to match the request.\n\n2. Structure the JSON:\n   - It must be an object: {\"name\": \"Alice Smith\", \"age\": 28, \"occupation\": \"Software Engineer\"}\n\n3. Output: The entire response should be this JSON string. The instructions say: \"Your output MUST be a single JSON string.\" And \"You MUST use <user_json_schema> to format the JSON string.\"\n\nFinally, remember that the response should not have any preamble or additional text. Just the JSON.",
            "refusal": null,
            "role": "assistant"
          }
        }
      ],
      "created": 1760471309,
      "id": "dcb16453-13a4-e9fb-2692-133d23c4d663_us-east-1",
      "model": "grok-3-mini",
      "object": "chat.completion",
      "system_fingerprint": "fp_4fae27f477",
      "usage": {
        "completion_tokens": 15,
        "completion_tokens_details": {
          "accepted_prediction_tokens": 0,
          "audio_tokens": 0,
          "reasoning_tokens": 440,
          "rejected_prediction_tokens": 0
        },
        "num_sources_used": 0,
        "prompt_tokens": 112,
        "prompt_tokens_details": {
          "audio_tokens": 0,
          "cached_tokens": 111,
          "image_tokens": 0,
          "text_tokens": 112
        },
        "total_tokens": 567
      }
    },
    "headers": {
      "access-control-allow-origin": [
        "*"
      ],
      "access-control-expose-headers": [
        "*"
      ],
      "cf-cache-status": [
        "DYNAMIC"
      ],
      "cf-ray": [
        "98e998331e52e239-ORD"
      ],
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Tue, 14 Oct 2025 19:48:34 GMT"
      ],
      "server": [
        "cloudflare"
      ],
      "set-cookie": [
        "__cf_bm=gekhODXYjCZ69.riKNDa_tBF_RCzPvpe1Z1MQm1EnqQ-1760471314-1.0.1.1-LrhaSyDAvj3JYXhGrVTwL.zbe4q3k.tFTe4lP1fBfI3EC6iLwjpVJWO_wBCMHUgnbu1Uyy5TmydA_z2uMXhfVDWeyPrx5nP0bpmLW5DqjKA; path=/; expires=Tue, 14-Oct-25 20:18:34 GMT; domain=.x.ai; HttpOnly; Secure; SameSite=None"
      ],
      "strict-transport-security": [
        "max-age=31536000"
      ],
      "transfer-encoding": [
        "chunked"
      ],
      "vary": [
        "origin, access-control-request-method, access-control-request-headers"
      ],
      "x-request-id": [
        "00-bc52ff3ddf7fbf832d7d20dfaf68a3f4-533ceb44005a0b2f-01"
      ],
      "x-zero-data-retention": [
        "false"
      ]
    },
    "status": 200
  }
}